trigger:
- azure-pipelines

pool:
  vmImage: 'ubuntu-latest'

jobs:
  - job: detect_release
    steps:
    - bash: |
        version=$(curl -s -H "Accept: application/vnd.github.v3+json" \
         "https://api.github.com/repos/vincent-herlemont/short/releases/latest" | \
          jq -r .tag_name | sed 's/^v//;s/\([^-]*-g\)/r\1/;s/-/./g')
        echo "##vso[task.setvariable variable=version;isOutput=true]$version"
      name: github
    - bash: |
       version=$(cargo metadata --no-deps --format-version 1 --manifest-path Cargo.toml \
         | jq -r '.packages[] | select(.name | test("short")) | .version')
        echo "##vso[task.setvariable variable=version;isOutput=true]$version"
      name: cargo
    - bash: |
        echo github_version : {$(github.version)}
        echo cargo_version : {$(cargo.version)}

  - job: github_release
    variables:
      cargo_version: $[ dependencies.detect_release.outputs['cargo.version'] ]
    dependsOn: detect_release
    condition: and(succeeded('detect_release'), ne(dependencies.detect_release.outputs['github.version'], dependencies.detect_release.outputs['cargo.version']))
    steps:
    - bash: | 
       echo "OK"
       echo cargo_version : {$(cargo_version)}
       echo $(ls)
       object=$(git rev-parse --verify HEAD)
       data=$(printf '{"tag":"%s","message":"test tag","object":"%s","type":"commit"}' $(cargo_version) $object )

       echo $data

       curl \
        -X POST \
        -H "Accept: application/vnd.github.v3+json" \
        https://api.github.com/repos/vincent-herlemont/short/git/tags \
        -d $data

